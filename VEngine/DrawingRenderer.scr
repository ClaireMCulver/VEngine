#pragma once

#include "Renderer.scr"

#include "MouseDrawing.scr"

class DrawingRenderer : public Renderer
{
public:
	DrawingRenderer();
	~DrawingRenderer();

	void Start();

	void Update();
	
	void Draw(VkCommandBuffer commandBuffer);

private:
	MouseDrawing* mouseDrawing;

};

DrawingRenderer::DrawingRenderer()
{
}

DrawingRenderer::~DrawingRenderer()
{
}

void DrawingRenderer::Start()
{
	mouseDrawing = owner->GetComponent<MouseDrawing>();
	owner->SetRenderer(this);
}

void DrawingRenderer::Update()
{
	
}

void DrawingRenderer::Draw(VkCommandBuffer commandBuffer)
{
	if (mouseDrawing->mousePtr->GetMouseDown())
	{
		RenderMesh(commandBuffer, 2, mouseDrawing->vertexBuffer->GetVKBuffer(), mouseDrawing->instanceBuffer->GetVKBuffer(), 1);
	}
}